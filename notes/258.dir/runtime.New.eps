%!PS-Adobe-2.0 EPSF-2.0
%%Title: runtime.2.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Jun 11 21:20:56 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
546 420 M
6416 0 V
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MRshow
1.000 UL
LTa
546 977 M
6416 0 V
1.000 UL
LTb
546 977 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 977 M
[ [(Helvetica) 140.0 0.0 true true (2)]
] -46.7 MRshow
1.000 UL
LTa
546 1533 M
6416 0 V
1.000 UL
LTb
546 1533 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 1533 M
[ [(Helvetica) 140.0 0.0 true true (4)]
] -46.7 MRshow
1.000 UL
LTa
546 2090 M
6416 0 V
1.000 UL
LTb
546 2090 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 2090 M
[ [(Helvetica) 140.0 0.0 true true (6)]
] -46.7 MRshow
1.000 UL
LTa
546 2646 M
6416 0 V
1.000 UL
LTb
546 2646 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 2646 M
[ [(Helvetica) 140.0 0.0 true true (8)]
] -46.7 MRshow
1.000 UL
LTa
546 3203 M
6416 0 V
1.000 UL
LTb
546 3203 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 3203 M
[ [(Helvetica) 140.0 0.0 true true (10)]
] -46.7 MRshow
1.000 UL
LTa
546 3759 M
6416 0 V
1.000 UL
LTb
546 3759 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 3759 M
[ [(Helvetica) 140.0 0.0 true true (12)]
] -46.7 MRshow
1.000 UL
LTa
546 4316 M
6416 0 V
1.000 UL
LTb
546 4316 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 4316 M
[ [(Helvetica) 140.0 0.0 true true (14)]
] -46.7 MRshow
1.000 UL
LTa
546 4872 M
6416 0 V
1.000 UL
LTb
546 4872 M
63 0 V
6353 0 R
-63 0 V
 stroke
462 4872 M
[ [(Helvetica) 140.0 0.0 true true (16)]
] -46.7 MRshow
1.000 UL
LTa
546 420 M
0 4452 V
1.000 UL
LTb
546 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MCshow
1.000 UL
LTa
1348 420 M
0 4452 V
1.000 UL
LTb
1348 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
1348 280 M
[ [(Helvetica) 140.0 0.0 true true (1e+06)]
] -46.7 MCshow
1.000 UL
LTa
2150 420 M
0 4452 V
1.000 UL
LTb
2150 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
2150 280 M
[ [(Helvetica) 140.0 0.0 true true (2e+06)]
] -46.7 MCshow
1.000 UL
LTa
2952 420 M
0 4452 V
1.000 UL
LTb
2952 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
2952 280 M
[ [(Helvetica) 140.0 0.0 true true (3e+06)]
] -46.7 MCshow
1.000 UL
LTa
3754 420 M
0 4452 V
1.000 UL
LTb
3754 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
3754 280 M
[ [(Helvetica) 140.0 0.0 true true (4e+06)]
] -46.7 MCshow
1.000 UL
LTa
4556 420 M
0 4452 V
1.000 UL
LTb
4556 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
4556 280 M
[ [(Helvetica) 140.0 0.0 true true (5e+06)]
] -46.7 MCshow
1.000 UL
LTa
5358 420 M
0 4452 V
1.000 UL
LTb
5358 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
5358 280 M
[ [(Helvetica) 140.0 0.0 true true (6e+06)]
] -46.7 MCshow
1.000 UL
LTa
6160 420 M
0 4452 V
1.000 UL
LTb
6160 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
6160 280 M
[ [(Helvetica) 140.0 0.0 true true (7e+06)]
] -46.7 MCshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true (8e+06)]
] -46.7 MCshow
1.000 UL
LTb
546 420 M
6416 0 V
0 4452 V
-6416 0 V
546 420 L
 stroke
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true (Run time \(sec\))]
] -46.7 MCshow
grestore
3754 70 M
[ [(Helvetica) 140.0 0.0 true true (No. of rows)]
] -46.7 MCshow
2952 1978 M
[ [(Helvetica) 140.0 0.0 true true (Table I/O)]
] -46.7 MLshow
4155 1032 M
[ [(Helvetica) 140.0 0.0 true true (Raw UNIX I/O)]
] -46.7 MLshow
1.000 UP
1.000 UL
LT0
547 420 M
1 0 V
1 0 V
2 0 V
3 3 V
8 0 V
8 3 V
24 2 V
16 3 V
16 6 V
80 14 V
161 36 V
321 72 V
160 36 V
401 87 V
401 94 V
401 86 V
401 89 V
401 87 V
401 100 V
401 78 V
401 103 V
401 94 V
401 89 V
401 101 V
401 94 V
401 103 V
401 75 V
547 420 Pls
548 420 Pls
549 420 Pls
551 420 Pls
554 423 Pls
562 423 Pls
570 426 Pls
594 428 Pls
610 431 Pls
626 437 Pls
706 451 Pls
867 487 Pls
1188 559 Pls
1348 595 Pls
1749 682 Pls
2150 776 Pls
2551 862 Pls
2952 951 Pls
3353 1038 Pls
3754 1138 Pls
4155 1216 Pls
4556 1319 Pls
4957 1413 Pls
5358 1502 Pls
5759 1603 Pls
6160 1697 Pls
6561 1800 Pls
6962 1875 Pls
1.000 UP
1.000 UL
LT1
547 420 M
1 0 V
1 0 V
2 3 V
3 0 V
8 3 V
8 0 V
24 8 V
16 5 V
16 3 V
80 25 V
161 48 V
321 94 V
160 53 V
401 123 V
401 166 V
401 148 V
401 320 V
401 325 V
401 165 V
401 -229 V
401 704 V
401 -450 V
401 211 V
401 114 V
401 304 V
401 587 V
401 500 V
547 420 Crs
548 420 Crs
549 420 Crs
551 423 Crs
554 423 Crs
562 426 Crs
570 426 Crs
594 434 Crs
610 439 Crs
626 442 Crs
706 467 Crs
867 515 Crs
1188 609 Crs
1348 662 Crs
1749 785 Crs
2150 951 Crs
2551 1099 Crs
2952 1419 Crs
3353 1744 Crs
3754 1909 Crs
4155 1680 Crs
4556 2384 Crs
4957 1934 Crs
5358 2145 Crs
5759 2259 Crs
6160 2563 Crs
6561 3150 Crs
6962 3650 Crs
1.000 UP
1.000 UL
LT2
547 420 M
1 0 V
1 3 V
2 -3 V
3 3 V
8 0 V
8 5 V
24 6 V
16 3 V
16 8 V
80 22 V
161 50 V
321 92 V
160 53 V
401 125 V
401 120 V
401 131 V
401 117 V
401 169 V
401 112 V
401 592 V
401 212 V
401 253 V
401 -167 V
401 306 V
401 -28 V
401 1008 V
401 834 V
547 420 Star
548 420 Star
549 423 Star
551 420 Star
554 423 Star
562 423 Star
570 428 Star
594 434 Star
610 437 Star
626 445 Star
706 467 Star
867 517 Star
1188 609 Star
1348 662 Star
1749 787 Star
2150 907 Star
2551 1038 Star
2952 1155 Star
3353 1324 Star
3754 1436 Star
4155 2028 Star
4556 2240 Star
4957 2493 Star
5358 2326 Star
5759 2632 Star
6160 2604 Star
6561 3612 Star
6962 4446 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
