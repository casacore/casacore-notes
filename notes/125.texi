\input texinfo		@c -*=texinfo-*-
@c %**start of header
@setfilename tip.info
@settitle TexInfo primer
@c %**end of header

@titlepage
@title Texinfo Primer
@subtitle How to get started in Texinfo
@author Peter Teuben
@vskip 0pt plus 1fill
Copyright @copyright{} 1992 Moi Le Roi


Published by AIPS++
@end titlepage

@ifinfo


@node Top, intro, (dir), (dir)
@top Texinfo Primer

The menu below selects for the online browsers. This text will
not be visible in the printed version of this document. It has
been compiled on @today{}.
@end ifinfo

@menu
* intro::	Introduction
* more::	More on info
* finally::	and Finally...
@end menu


@node intro, more, Top, Top
@chapter Intro

This document introduces you to the hypertext-like texinfo info system
that can be found within the GNU system.  Being meant for texinfo
writers the printed form of this document, although readable, is also
to be used next to the electronic form in order to see how texinfo
is converted to a more a human readable format. 


@menu
* tex basics::      TeX basics
* info basics::     Info basics
@end menu

@node tex basics, info basics, intro, intro
@section TeX Basics

Texinfo is a markup language, much like, and actually based on @TeX{} (the
first line in a texinfo file is @code{\input texinfo}).  An immediate
visual difference is that the backslash (@code{\}), that @TeX{} uses to
signify commands, has been replaced with the at (@code{@@}) symbol.  For
TeX users texinfo is hence nothing more than a (simple) TeX macro
package.  The text you are reading now originates from a file
@file{tip.texi}@footnote{@code{tip} is short for TexInfo Primer...},
where @code{texi} is a frequently used extension name, though @code{tex}
would perhaps be more convenient since the @code{tex} program will be
run on this file:

@example
    % tex tip.texi
@end example

@noindent
creates a @code{tip.dvi} file that can be previewed or printed:

@example
    % xdvi tip                       # preview; or something like that
    % dvips tip.dvi ; lpr tip.ps     # convert and print; ...
@end example


@node info basics, , tex basics, intro
@section Info Basics

A texinfo file can also be converted to an info file:

@example
    % makeinfo tip.texi
@end example

@noindent
which creates a file called @file{tip.info}. 
This info file is a hypertext file, and to view
it as such you need smart readers. There are various
programs available to do this:

@itemize @bullet

@item
info: a simple ASCII-oriented (works on your plain vanilla VT100)
browser. Your terminal will be put in ``raw'' mode, such that
single character keystrokes become commands to browse around.
To test your local info file:

@example
    % info -f tip.info
@end example

@item
xinfo: X-windows based version of the ASCII info reader. It also 
understands the single character commands used in @code{info}

@item
ivinfo: Interviews based version of the ASCII info reader

@item
para: an info reader and writer within the emacs environment

@item
emacs: within emacs there is 
  @itemize @minus
  @item
      an info reader: @code{M-x info} 
  @item 
      an info writer: @code{M-x texinfo-mode} to switch to texinfo mode
  @end itemize

@end itemize

The environment variable INFOPATH is normally used by the info 
browsers to find directories with info files.

@node more, finally, intro, Top
@chapter More on info

The essential difference between a texinfo file and a classical
tex-based manual is it's hypertext feature.  They are implemented as
nodes in the text, such that readers can jump to these locations in an
organized manner.  Nodes are typically structured in an hierarchical
way, often following the manual-chapter-section-subsection tree
structure.  It is however up to the author to define this structure: a
node is defined with a unique name, and will also need to know what it's
'previous', 'next' and 'up' nodes are.  Obviously the printed manual
will not show any of this hypertext structure, since it is a simple
linear chain of text.  All of the online info readers described earlier
(@xref{info basics}) allow the user to browse information in this
hypertext way.  In texinfo this appears in two forms: menus and cross
references. 

@enumerate
@item
A menu typically appears at the top
of a unit (manual/chapter/section/...) to show it's underlying
structure. The user can then linearly browse the material, or select
sub-parts thereof. 

@item
A cross-reference may appear at any random point in the text, but must
point to a node anywhere (including other manuals) in your info
system. The user can select to visit that node and quickly
come back to the previous location. This work to a fair degree
of depth.
@end enumerate

@node finally, , more, Top
@chapter Finally

Of course texinfo contains much more the few highlights given here. The
best way to advance is use your favorite browser (I prefer @code{xinfo},
though @code{ivinfo} is not bad either), perhaps find an example 
text that is close to what you want, and compose while using the online
info on texinfo itself to get familiar with reading as well as writing
these texinfo files.


@bye

