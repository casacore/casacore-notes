\documentstyle[10pt]{article}
\begin{document}

\newcommand{\aipspp}{{\sc aips++}}

\title{Note 213: Contributing Scripts to AIPS++ (Green Bank)}
\author{J.P. McMullin \\ {\em jmcmulli@nrao.edu}}
\date{September 22, 1997}
\maketitle

\section{Motivation}

This note is intended to elaborate on the various options for contributing
scripts to the AIPS++ system; this note contains some information specific
to NRAO, Green Bank.

\section{Code Levels in AIPS++}

Though AIPS++ provides a broad battery of reduction and analysis
tools, it is also conducive to being used as a platform or environment
for further development.

Currently within AIPS++ there are several levels of incorporation into
the system. The base level, or main-stream AIPS++,  is uniform from site to 
site and is composed of a sophisticated set of general purpose applications 
and tools for astronomical analysis. Code at this level must pass stringent
review by participating AIPS++ programmers before being incorporated into
the system.

\bigskip

\begin{table}
\caption{AIPS++ Code Levels}
\medskip
\begin{tabular}{ccc}
\hline 
Catagory                & directory                     & notes\\
                        &                               &      \\
main-stream AIPS++      & aips, synthesis, dish, vlbi   & must be code-copped \\
site-specific AIPS++    & nrao, atnf, nfra, bima, etc   & controlled by consorti
um partner \\
unsupported AIPS++      & contrib$^a$                   & donated \\
                        & trial                         & temporary directory for development \\
\hline
\end{tabular}
\end{table}
 
$^a$ Currently in Green Bank, there are two additional directories (engr-scripts
and gb-astro-scripts) which are effectively contributed script directories.
These will be moved into contrib.

\bigskip

A second level of AIPS++ represents site-specific tasks, tools that
don't have an extended general utility but provide essential applications
for a given observatory. Currently, this level of programs is not officially
code-copped or reviewed, but must be taken over by an AIPS++ programmer
who will help conform the code to existing style requirements and check
the script into a code management system; at this stage, it is in the
AIPS++ system and it will evolve to track changes within AIPS++ and
Glish.

A third level of AIPS++ is composed of contributed scripts. These are
scripts that have a limited or transient utility but still utilize
the AIPS++ environment. Code at this level is not interfered with in
any way, beyond eliminating name conflicts. Currently in Green Bank,
there are two directories of contributed scripts, /aips++/engr-scripts
and /aips++/gb-astro-scripts.

Table 1 summarizes the different levels.
Each level of scripts is upwardly mobile; for example, 
scripts on the contrib level
which bring significant capabilities that other parties in the project
might want can be taken over by an AIPS++ programmer and elevated to
the next level.

\section{Style Requirements}

Scripts submitted into contrib will not be looked at but if you have designs
on a script having broader applicability and being elevated into AIPS++,
then following the AIPS++ style specifications will speed the process.

Note 197 describes in detail "How to Write an AIPS++ Application". This
note covers interface considerations, a guide to writing an application
(using the glish closure idiom), writing a GUI for an application, 
and documenting the application. Adherence to these procedures will 
expedite the process of moving a script from contributed status to formal
acceptance.


\end{document}
