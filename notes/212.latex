\documentstyle[10pt]{article}
\begin{document}

\newcommand{\aipspp}{{\sc aips++}}

\title{Note 212: Basic Flat Table to MeasurementSet Conversion}
\author{J.P. McMullin \\ {\em jmcmulli@nrao.edu}}
\date{Sept 22, 1997}
\maketitle

\section{Motivation}

In anticipation of switching from flat tables to MeasurementSets, this note
is intended to describe the alterations needed in existing scripts to 
accomodate this change.

\section{Introduction}

In construction, a measurement set is fashioned
almost identically to a flat table (see the gbt-module, gbtfiller and
gbtmsfiller).
All of the information contained within the flat tables is also within a
MeasurementSet, however, the information is reorganized which necessitates
changes in existing scripts to access the data, columns and cells.
(See Note 191 for complete information on MeasurementSet definitions).

\section{Basic Mapping}

This section presents a simple comparison key to accessing information in
flat tables versus a MeasurementSet. The following table summarizes
the conversion; the Flat Table Column is the table keyword used in flat
tables and the MeasurementSet Column is the corresponding keyword while
Table specifies whether the information exists in the main table or
in a subtable. Data information in the ``main'' table is invoked normally:

\begin{verbatim}
- a := table('example.MS');
- scans := a.getcol('SCAN_NUMBER');
\end{verbatim}

Data information in subtables is accessed by adding a subdirectory
to the MeasurementSet descriptor:

\begin{verbatim}
- a := table('example.MS/SOURCE');
- object := a.getcol('NAME');
\end{verbatim}

\begin{tabular}{ccc}
Flat Table Column	& MeasurementSet Column	& Table \\
			&			&	\\
Time			& TIME$^a$		& main	\\
DATA			& FLOAT\_DATA$^b$	& main	\\
SCAN			& SCAN\_NUMBER		& main 	\\
SUBSCAN			& NS\_GBT\_SUBSCAN	& main	\\
RECEIVER\_ID		& RCVRID		& NS\_GBT\_BACKEND \\
OBJECT			& NAME			& SOURCE	\\
PSRDM			& PSRDM			& NS\_GBT\_BACKEND\\
PHASE\_ID		& NS\_GBT\_PHASE\_ID	& main	\\
UTCSTART		& TIME$^a$		& main	\\
UTDATE			& TIME$^a$		& main	\\
PHASETIM		& PHASETIM		& NS\_GBT\_BACKEND\\
FREQRES			& RESOLUTION		& SPECTRAL\_WINDOW\\
OBSFREQ			& REF\_FREQUENCY	& SPECTRAL\_WINDOW\\
RFSIDE			& RFSIDE		& NS\_GBT\_BACKEND\\
IFSIDE			& IFSIDE		& NS\_GBT\_BACKEND\\
IFF			& IFF			& NS\_GBT\_BACKEND\\
CAL			& CAL			& NS\_GBT\_BACKEND\\
SIGREF			& SIGREF		& NS\_GBT\_BACKEND\\
PHASETIM		& PHASETIM		& NS\_GBT\_BACKEND\\
BLANKTIM		& BLANKTIM		& NS\_GBT\_BACKEND\\
\end{tabular}

$^a$ In MeasurementSets, the TIME is in UTC seconds. To convert to flat table
Time: 
\begin{verbatim}
- a := table('example.MS');	# Get the table into Glish.
- b := a.getcol('TIME');	# Get the TIME column.
- c := dm.unit(b[1],'s');	# Add the units explicity.
- d := dm.epoch('utc',c)	# Define the epoch.
- e := d.m0.value		# e will be the 'Time' from the flat table.
\end{verbatim}

To get UTDATE, use the 'r\_utc' reference code in the dm.epoch command.

$^b$ DATA is a 2-dimensional array while FLOAT\_DATA is a 3 dimensional array.
(e.g. if data::shape is [256,1357], then float\_data::shape will be [1,256,1357].

\section{Indexing Issues}

The main table and subtables within a MeasurementSet may not have the
same number of rows. As a result, accessing pieces of information in
different subtables will sometimes require more complicated indexing
than in a standard flat table.

In general, this can be treated using the table 'query' method to create
subtables based on indexing expressions.

For example, 

\begin{verbatim}
- 
\end{verbatim}

It is useful to note that two of the major tables for data analysis, the main 
table and NS\_GBT\_BACKEND do have the same number of rows so the indexing 
is trivial in this case.

\end{document}
