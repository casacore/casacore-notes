%!PS-Adobe-2.0 EPSF-2.0
%%Title: calib.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Jan 16 12:39:00 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 420 M
6332 0 V
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MRshow
1.000 UL
LTa
630 865 M
6332 0 V
1.000 UL
LTb
630 865 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 865 M
[ [(Helvetica) 140.0 0.0 true true (50)]
] -46.7 MRshow
1.000 UL
LTa
630 1310 M
6332 0 V
1.000 UL
LTb
630 1310 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 1310 M
[ [(Helvetica) 140.0 0.0 true true (100)]
] -46.7 MRshow
1.000 UL
LTa
630 1756 M
6332 0 V
1.000 UL
LTb
630 1756 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 1756 M
[ [(Helvetica) 140.0 0.0 true true (150)]
] -46.7 MRshow
1.000 UL
LTa
630 2201 M
6332 0 V
1.000 UL
LTb
630 2201 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 2201 M
[ [(Helvetica) 140.0 0.0 true true (200)]
] -46.7 MRshow
1.000 UL
LTa
630 2646 M
6332 0 V
1.000 UL
LTb
630 2646 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 2646 M
[ [(Helvetica) 140.0 0.0 true true (250)]
] -46.7 MRshow
1.000 UL
LTa
630 3091 M
6332 0 V
1.000 UL
LTb
630 3091 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 3091 M
[ [(Helvetica) 140.0 0.0 true true (300)]
] -46.7 MRshow
1.000 UL
LTa
630 3536 M
6332 0 V
1.000 UL
LTb
630 3536 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 3536 M
[ [(Helvetica) 140.0 0.0 true true (350)]
] -46.7 MRshow
1.000 UL
LTa
630 3982 M
6332 0 V
1.000 UL
LTb
630 3982 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 3982 M
[ [(Helvetica) 140.0 0.0 true true (400)]
] -46.7 MRshow
1.000 UL
LTa
630 4427 M
6332 0 V
1.000 UL
LTb
630 4427 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 4427 M
[ [(Helvetica) 140.0 0.0 true true (450)]
] -46.7 MRshow
1.000 UL
LTa
630 4872 M
6332 0 V
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
 stroke
546 4872 M
[ [(Helvetica) 140.0 0.0 true true (500)]
] -46.7 MRshow
1.000 UL
LTa
630 420 M
0 4452 V
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MCshow
1.000 UL
LTa
1263 420 M
0 4452 V
1.000 UL
LTb
1263 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
1263 280 M
[ [(Helvetica) 140.0 0.0 true true (50)]
] -46.7 MCshow
1.000 UL
LTa
1896 420 M
0 4452 V
1.000 UL
LTb
1896 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
1896 280 M
[ [(Helvetica) 140.0 0.0 true true (100)]
] -46.7 MCshow
1.000 UL
LTa
2530 420 M
0 4452 V
1.000 UL
LTb
2530 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
2530 280 M
[ [(Helvetica) 140.0 0.0 true true (150)]
] -46.7 MCshow
1.000 UL
LTa
3163 420 M
0 4452 V
1.000 UL
LTb
3163 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
3163 280 M
[ [(Helvetica) 140.0 0.0 true true (200)]
] -46.7 MCshow
1.000 UL
LTa
3796 420 M
0 4452 V
1.000 UL
LTb
3796 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
3796 280 M
[ [(Helvetica) 140.0 0.0 true true (250)]
] -46.7 MCshow
1.000 UL
LTa
4429 420 M
0 4452 V
1.000 UL
LTb
4429 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
4429 280 M
[ [(Helvetica) 140.0 0.0 true true (300)]
] -46.7 MCshow
1.000 UL
LTa
5062 420 M
0 4452 V
1.000 UL
LTb
5062 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
5062 280 M
[ [(Helvetica) 140.0 0.0 true true (350)]
] -46.7 MCshow
1.000 UL
LTa
5696 420 M
0 4452 V
1.000 UL
LTb
5696 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
5696 280 M
[ [(Helvetica) 140.0 0.0 true true (400)]
] -46.7 MCshow
1.000 UL
LTa
6329 420 M
0 4452 V
1.000 UL
LTb
6329 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
6329 280 M
[ [(Helvetica) 140.0 0.0 true true (450)]
] -46.7 MCshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
 stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true (500)]
] -46.7 MCshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
 stroke
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true (Run time \(sec\))]
] -46.7 MCshow
grestore
3796 70 M
[ [(Helvetica) 140.0 0.0 true true (No. of solution intervals)]
] -46.7 MCshow
3163 3091 M
[ [(Helvetica) 140.0 0.0 true true (Default settings)]
] -46.7 MLshow
3163 1221 M
[ [(Helvetica) 140.0 0.0 true true (No slot-hunting)]
] -46.7 MLshow
5316 865 M
[ [(Helvetica) 140.0 0.0 true true (Preavg=SolInt)]
] -46.7 MLshow
1.000 UP
1.000 UL
LT0
757 974 M
883 952 L
380 156 V
633 367 V
1267 712 V
1266 776 V
6962 4471 L
757 974 Pls
883 952 Pls
1263 1108 Pls
1896 1475 Pls
3163 2187 Pls
4429 2963 Pls
6962 4471 Pls
1.000 UP
1.000 UL
LT1
757 882 M
883 622 L
380 45 V
633 88 V
2533 361 V
1267 196 V
1266 217 V
757 882 Crs
883 622 Crs
1263 667 Crs
1896 755 Crs
4429 1116 Crs
5696 1312 Crs
6962 1529 Crs
1.000 UP
1.000 UL
LT2
655 724 M
681 495 L
50 -2 V
89 4 V
63 2 V
380 25 V
633 48 V
4429 838 L
1267 200 V
1266 234 V
655 724 Star
681 495 Star
731 493 Star
820 497 Star
883 499 Star
1263 524 Star
1896 572 Star
4429 838 Star
5696 1038 Star
6962 1272 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
